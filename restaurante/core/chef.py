# core/chef.py

import threading
import time
from restaurante.models.pedido import EstadoPedido

class Chef(threading.Thread):
    """
    Classe que representa um Chef em um restaurante virtual.
    Herda de Thread para executar o preparo de pedidos em paralelo.
    
    Atributos:
        id (int): Identificador √∫nico do chef
        config (object): Objeto de configura√ß√£o com par√¢metros do sistema
        estado (str): Estado atual do chef (DISPON√çVEL/PREPARANDO)
        fila_pedidos (FilaPedidos): Fila de pedidos pendentes para preparo
        fila_prontos (FilaProntos): Fila de pedidos finalizados
        _ativo (bool): Flag para controle da execu√ß√£o da thread
    """
    
    def __init__(self, id: int, fila_pedidos, fila_prontos, config):
        """
        Inicializa o chef com suas configura√ß√µes b√°sicas
        
        Args:
            id: N√∫mero de identifica√ß√£o do chef
            fila_pedidos: Fila de pedidos a serem processados
            fila_prontos: Fila onde ser√£o colocados os pedidos prontos
            config: Objeto de configura√ß√£o com par√¢metros do sistema
        """
        super().__init__(daemon=True)
        self.id = id
        self.config = config
        self.estado = "DISPON√çVEL"
        self.fila_pedidos = fila_pedidos
        self.fila_prontos = fila_prontos
        self._ativo = True  # Controla a execu√ß√£o cont√≠nua da thread

    def run(self):
        """
        M√©todo principal da thread que processa pedidos continuamente.
        Obt√©m pedidos da fila e os prepara enquanto estiver ativo.
        """
        while self._ativo:
            try:
                pedido = self.fila_pedidos.obter_proximo_pedido()
                self._preparar_pedido(pedido)
            except:
                break  # Encerra a execu√ß√£o em caso de erros

    def _preparar_pedido(self, pedido):
        """
        Executa o processo de preparo de um pedido, incluindo:
        - Atualiza√ß√£o de estados
        - Simula√ß√£o de tempo de preparo
        - Movimenta√ß√£o do pedido para a fila de prontos
        
        Args:
            pedido: Objeto Pedido a ser preparado
        """
        self.estado = "PREPARANDO"
        pedido.estado = EstadoPedido.EM_PREPARO
        print(f"üë®‚Äçüç≥ [Chef {self.id}] Preparando pedido {pedido.id}")
        
        # Simula o tempo de preparo usando o valor da configura√ß√£o
        time.sleep(self.config.tempoPreparoPedido)
        
        # Finaliza o pedido e move para a fila de prontos
        pedido.estado = EstadoPedido.PRONTO
        self.fila_prontos.adicionar_pedido_pronto(pedido)
        print(f"‚úÖ [Chef {self.id}] Pedido {pedido.id} pronto")
        self.estado = "DISPON√çVEL"

    def parar(self):
        """
        M√©todo para encerrar a execu√ß√£o do chef de forma segura
        """
        self._ativo = False